-- 生成者Oracle SQL Developer Data Modeler 22.2.0.165.1149
--   时间:        2023-05-03 12:55:29 CST
--   站点:      SQL Server 2012
--   类型:      SQL Server 2012



-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE TABLE `GROUP` 
    (
     VISIT_ID NUMERIC (10) NOT NULL , 
     GROUP_SIZE NUMERIC (3) NOT NULL 
    );

ALTER TABLE `GROUP` ADD CONSTRAINT GROUP_PK PRIMARY KEY (VISIT_ID)
;
 
ALTER TABLE `GROUP` ADD CONSTRAINT GROUP_PKv1 UNIQUE (GROUP_SIZE);
 

-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE TABLE INDIVIDUAL 
    (
     VISIT_ID NUMERIC (10) NOT NULL , 
     GENDER VARCHAR (12) NOT NULL , 
     NATIONALITY VARCHAR (30) NOT NULL 
    );

ALTER TABLE INDIVIDUAL ADD CONSTRAINT INDIVIDUAL_PK PRIMARY KEY (VISIT_ID)
;
 

-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE TABLE SCHOOL 
    (
     VISIT_ID NUMERIC (10) NOT NULL , 
     SCHOOL_ID NUMERIC (15) NOT NULL , 
     SCHOOL_NAME VARCHAR (30) NOT NULL 
    );

ALTER TABLE SCHOOL ADD CONSTRAINT SCHOOL_PK PRIMARY KEY (VISIT_ID)
;
 

-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE TABLE TN_AT_TK 
    (
     TK_ID NUMERIC (15) NOT NULL , 
     A_ID NUMERIC (5) NOT NULL , 
     A_DATE DATE NOT NULL 
    );

-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE TABLE TN_ATTRACTIVE 
    (
     A_ID NUMERIC (5) NOT NULL , 
     AT_NAME VARCHAR (15) NOT NULL , 
     A_DESCP VARCHAR (20) NOT NULL , 
     AT_TYPE VARCHAR (20) NOT NULL , 
     STATUS CHAR (3) NOT NULL , 
     MIN_HEIGHT NUMERIC (3,2) NOT NULL , 
     A_DURATION NUMERIC (3) NOT NULL , 
     LOC_SECTION VARCHAR (3) NOT NULL , 
     CAPACITY NUMERIC (3) NOT NULL 
    );

ALTER TABLE TN_ATTRACTIVE ADD CONSTRAINT TN_ATTRACTIVE_PK PRIMARY KEY (A_ID)
;
 

-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE TABLE TN_INV 
    (
     TN_PARKING_PK_ID NUMERIC (28) NOT NULL , 
     INV_ID NUMERIC (15) NOT NULL , 
     INV_DATE DATE NOT NULL , 
     INV_AMT NUMERIC (3,2) NOT NULL 
    );

    


-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE UNIQUE INDEX 
    TN_INV__IDX ON TN_INV 
    ( 
     TN_PARKING_PK_ID 
    ); 
 

ALTER TABLE TN_INV ADD CONSTRAINT TN_INV_PK PRIMARY KEY (INV_ID)
;
 

-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE TABLE TN_PARKING 
    (
     VISIT_ID NUMERIC (10) NOT NULL , 
     PK_ID NUMERIC (15) NOT NULL , 
     PK_LOT VARCHAR (5) NOT NULL , 
     SPOT_NUM NUMERIC (5) NOT NULL , 
     TIME_IN DATE NOT NULL , 
     TIME_OUT DATE NOT NULL , 
     PARK_FEE NUMERIC (3) NOT NULL , 
     TN_INV_INV_ID NUMERIC (28) NOT NULL 
    );

    


-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE UNIQUE INDEX 
    TN_PARKING__IDX ON TN_PARKING 
    ( 
     VISIT_ID 
    ); 
  


-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE UNIQUE INDEX 
    TN_PARKING__IDXv1 ON TN_PARKING 
    ( 
     TN_INV_INV_ID 
    ); 
 

ALTER TABLE TN_PARKING ADD CONSTRAINT TN_PARKING_PK PRIMARY KEY (PK_ID)
;
 

-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE TABLE TN_PYMT 
    (
     TN_INV_INV_ID NUMERIC (15) NOT NULL , 
     PAY_ID NUMERIC (15) NOT NULL , 
     PAY_METHOD VARCHAR (15) NOT NULL , 
     PAY_DATE DATE NOT NULL , 
     NAME_ONCARD VARCHAR (30) , 
     CVV NUMERIC (3) , 
     CARD_NUMBER NUMERIC (16) , 
     EXP_DATE DATE 
    );

ALTER TABLE TN_PYMT ADD CONSTRAINT TN_PYMT_PK PRIMARY KEY (PAY_ID)
;
 

-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE TABLE TN_SHOW 
    (
     SHOW_ID NUMERIC (10) NOT NULL , 
     S_NAME VARCHAR (20) NOT NULL , 
     S_DESCP VARCHAR (50) NOT NULL , 
     SH_TYPE VARCHAR (1) NOT NULL , 
     WHEELCHAIR_ACC CHAR (1) NOT NULL 
    );

ALTER TABLE TN_SHOW ADD CONSTRAINT TN_SHOW_PK PRIMARY KEY (SHOW_ID)
;
 

-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE TABLE TN_STORE 
    (
     STORE_ID NUMERIC (15) NOT NULL , 
     ST_NAME VARCHAR (20) NOT NULL , 
     CATEGORY VARCHAR (15) NOT NULL , 
     DESCP VARCHAR (30) NOT NULL , 
     MENUE_ITEM VARCHAR (15) NOT NULL 
    );

ALTER TABLE TN_STORE ADD CONSTRAINT TN_STORE_PK PRIMARY KEY (STORE_ID, MENUE_ITEM)
;
 

-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE TABLE TN_STR 
    (
     ORDER_ID NUMERIC (15) NOT NULL , 
     QTY NUMERIC (15) NOT NULL , 
     UNIT_PRICE NUMERIC (3,2) NOT NULL , 
     VISIT_ID NUMERIC (10) NOT NULL , 
     STORE_ID NUMERIC (15) NOT NULL , 
     MENUE_ITEM VARCHAR (15) NOT NULL , 
     INV_ID NUMERIC (15) NOT NULL 
    );

ALTER TABLE TN_STR ADD CONSTRAINT TN_STR_PK PRIMARY KEY (ORDER_ID)
;
 

-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE TABLE TN_SUMMARY 
    (
     VISITOR_ID NUMERIC (10) NOT NULL , 
     VISIT_DATE DATE NOT NULL , 
     TICKET_ID NUMERIC (10) NOT NULL , 
     TICKET_AMT NUMERIC (5,2) NOT NULL , 
     SHOW_ID NUMERIC (10) NOT NULL , 
     SHOW_AMT NUMERIC (5,2) NOT NULL , 
     PARK_ID NUMERIC (5) NOT NULL , 
     PARK_AMT NUMERIC (5,2) NOT NULL , 
     STORE_ID NUMERIC (10) NOT NULL , 
     STORE_AMT NUMERIC (5,2) NOT NULL 
    );

ALTER TABLE TN_SUMMARY ADD CONSTRAINT TN_SUMMARY_PK PRIMARY KEY (VISITOR_ID, VISIT_DATE)
;
 

-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE TABLE TN_SW_TK 
    (
     VISIT_ID NUMERIC (10) NOT NULL , 
     SHOW_ID NUMERIC (10) NOT NULL , 
     SRT_TIME DATE NOT NULL , 
     END_TIME DATE NOT NULL , 
     QTY NUMERIC (3) NOT NULL , 
     PRICE NUMERIC (4,2) NOT NULL , 
     TN_INV_INV_ID NUMERIC (15) NOT NULL 
    );

-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE TABLE TN_TICKET 
    (
     TK_ID NUMERIC (15) NOT NULL , 
     TK_METHOD VARCHAR (5) NOT NULL , 
     PURCHASE_DATE DATE NOT NULL , 
     TK_PRICE NUMERIC (3,2) NOT NULL , 
     VISIT_DATE DATE NOT NULL , 
     DISCOUNT NUMERIC (3,2) , 
     VISIT_ID NUMERIC (10) NOT NULL , 
     TN_INV_INV_ID NUMERIC (15) NOT NULL 
    );

ALTER TABLE TN_TICKET ADD CONSTRAINT TN_TICKET_PK PRIMARY KEY (TK_ID)
;
 

-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE TABLE TN_VISITOR 
    (
     VISIT_ID NUMERIC (10) NOT NULL , 
     V_FNAME VARCHAR (15) NOT NULL , 
     V_LNAME VARCHAR (15) NOT NULL , 
     V_EMAIL VARCHAR (30) NOT NULL , 
     PH_NO NUMERIC (10) NOT NULL , 
     STREET VARCHAR (5) NOT NULL , 
     CITY VARCHAR (15) NOT NULL , 
     STATE VARCHAR (15) NOT NULL , 
     ZIPCODE VARCHAR (12) NOT NULL , 
     COUNTRY VARCHAR (15) NOT NULL , 
     DOB DATE NOT NULL , 
     V_TYPE CHAR (1) NOT NULL , 
     TN_PARKING_PK_ID NUMERIC (15) NOT NULL 
    );


ALTER TABLE TN_VISITOR 
    ADD CONSTRAINT CH_INH_TN_VISITOR 
    CHECK ( V_TYPE IN ('G', 'I', 'S') ); 
 

    


-- SQLINES LICENSE FOR EVALUATION USE ONLY
CREATE UNIQUE INDEX 
    TN_VISITOR__IDX ON TN_VISITOR 
    ( 
     TN_PARKING_PK_ID 
    ); 
 

ALTER TABLE TN_VISITOR ADD CONSTRAINT TN_VISITOR_PK PRIMARY KEY (VISIT_ID)
;
 

ALTER TABLE `GROUP` 
    ADD CONSTRAINT GROUP_TN_VISITOR_FK FOREIGN KEY 
    ( 
     VISIT_ID
    ) 
    REFERENCES TN_VISITOR 
    ( 
     VISIT_ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION; 
 

ALTER TABLE INDIVIDUAL 
    ADD CONSTRAINT INDIVIDUAL_TN_VISITOR_FK FOREIGN KEY 
    ( 
     VISIT_ID
    ) 
    REFERENCES TN_VISITOR 
    ( 
     VISIT_ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION; 
 

ALTER TABLE SCHOOL 
    ADD CONSTRAINT SCHOOL_TN_VISITOR_FK FOREIGN KEY 
    ( 
     VISIT_ID
    ) 
    REFERENCES TN_VISITOR 
    ( 
     VISIT_ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION; 
 

ALTER TABLE TN_AT_TK 
    ADD CONSTRAINT TN_AT_TK_TN_ATTRACTIVE_FK FOREIGN KEY 
    ( 
     A_ID
    ) 
    REFERENCES TN_ATTRACTIVE 
    ( 
     A_ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION; 
 

ALTER TABLE TN_AT_TK 
    ADD CONSTRAINT TN_AT_TK_TN_TICKET_FK FOREIGN KEY 
    ( 
     TK_ID
    ) 
    REFERENCES TN_TICKET 
    ( 
     TK_ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION; 
 

ALTER TABLE TN_PARKING 
    ADD CONSTRAINT TN_PARKING_TN_VISITOR_FK FOREIGN KEY 
    ( 
     VISIT_ID
    ) 
    REFERENCES TN_VISITOR 
    ( 
     VISIT_ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION; 
 

ALTER TABLE TN_PYMT 
    ADD CONSTRAINT TN_PYMT_TN_INV_FK FOREIGN KEY 
    ( 
     TN_INV_INV_ID
    ) 
    REFERENCES TN_INV 
    ( 
     INV_ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION; 
 

ALTER TABLE TN_STR 
    ADD CONSTRAINT TN_STR_TN_INV_FK FOREIGN KEY 
    ( 
     INV_ID
    ) 
    REFERENCES TN_INV 
    ( 
     INV_ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION; 
 

ALTER TABLE TN_STR 
    ADD CONSTRAINT TN_STR_TN_STORE_FK FOREIGN KEY 
    ( 
     STORE_ID, 
     MENUE_ITEM
    ) 
    REFERENCES TN_STORE 
    ( 
     STORE_ID , 
     MENUE_ITEM 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION; 
 

ALTER TABLE TN_STR 
    ADD CONSTRAINT TN_STR_TN_VISITOR_FK FOREIGN KEY 
    ( 
     VISIT_ID
    ) 
    REFERENCES TN_VISITOR 
    ( 
     VISIT_ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION; 
 

ALTER TABLE TN_SW_TK 
    ADD CONSTRAINT TN_SW_TK_TN_INV_FK FOREIGN KEY 
    ( 
     TN_INV_INV_ID
    ) 
    REFERENCES TN_INV 
    ( 
     INV_ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION; 
 

ALTER TABLE TN_SW_TK 
    ADD CONSTRAINT TN_SW_TK_TN_SHOW_FK FOREIGN KEY 
    ( 
     SHOW_ID
    ) 
    REFERENCES TN_SHOW 
    ( 
     SHOW_ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION; 
 

ALTER TABLE TN_SW_TK 
    ADD CONSTRAINT TN_SW_TK_TN_VISITOR_FK FOREIGN KEY 
    ( 
     VISIT_ID
    ) 
    REFERENCES TN_VISITOR 
    ( 
     VISIT_ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION; 
 

ALTER TABLE TN_TICKET 
    ADD CONSTRAINT TN_TICKET_TN_INV_FK FOREIGN KEY 
    ( 
     TN_INV_INV_ID
    ) 
    REFERENCES TN_INV 
    ( 
     INV_ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION; 
 

ALTER TABLE TN_TICKET 
    ADD CONSTRAINT TN_TICKET_TN_VISITOR_FK FOREIGN KEY 
    ( 
     VISIT_ID
    ) 
    REFERENCES TN_VISITOR 
    ( 
     VISIT_ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION; 
 

ALTER TABLE TN_VISITOR 
    ADD CONSTRAINT TN_VISITOR_TN_PARKING_FK FOREIGN KEY 
    ( 
     TN_PARKING_PK_ID
    ) 
    REFERENCES TN_PARKING 
    ( 
     PK_ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION; 
 



-- Oracle SQL Developer Data Modeler 概要报告: 
-- 
-- CREATE TABLE                            15
-- CREATE INDEX                             4
-- ALTER TABLE                             31
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE DATABASE                          0
-- CREATE DEFAULT                           0
-- CREATE INDEX ON VIEW                     0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE ROLE                              0
-- CREATE RULE                              0
-- CREATE SCHEMA                            0
-- CREATE SEQUENCE                          0
-- CREATE PARTITION FUNCTION                0
-- CREATE PARTITION SCHEME                  0
-- 
-- DROP DATABASE                            0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
